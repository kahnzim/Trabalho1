# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fXueJYZaz7962nBaBkbRlyU7obJzggUQ
"""

from ydata_profiling import ProfileReport
from sklearn.compose import make_column_selector as selector

import pandas as pd
import numpy as np

df = pd.read_excel('1.xls')

num_colunas = df.shape[1]
print(f"numero de colunas:{num_colunas}.")

num_linhas = df.shape[0]
print(f"numero de linhas: {num_linhas}.")

def classificar_colunas(df, limite=15, colunas_excluidas=['ID']):
    resultado = {}
    for coluna in df.columns:
        if coluna in colunas_excluidas:
            continue
        if df[coluna].nunique() <= limite and pd.api.types.is_numeric_dtype(df[coluna]):
            resultado[coluna] = "Categórica"
        else:
            resultado[coluna] = "Numérica"
    return resultado
classificacao = classificar_colunas(df)
for coluna, tipo in classificacao.items():
    print(f"{coluna:<25} → {tipo}")

print("Numéricas:")
numéricas = [col for col, tipo in classificacao.items() if tipo == "Numérica"]
df[numéricas] = df[numéricas].apply(pd.to_numeric, errors='coerce')
print(df[numéricas].apply(lambda x: x[(x != 0) & (x.notna())].describe()).round(2))

print("Categóricas")
categóricas = [col for col, tipo in classificacao.items() if tipo == "Categórica"]

for col in categóricas:
    print(f"\n{col}:")
    counts = df[col][df[col] != 0].value_counts(normalize=True).round(2)
    print(counts)

contagem = (df.drop(columns='ID') == 0).fillna(0).eq(0).all(axis=1).sum()
print(f"Total de linhas sem nenhuma informação relevante(excluindo ID): {contagem}")